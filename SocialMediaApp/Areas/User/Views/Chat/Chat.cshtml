@model SocialMediaApp.Models.ViewModel.ChatRoomViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Chat with Friend";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<div class="container mt-5">
    <h4 class="mb-4">Chat with @Model.FriendUserName</h4>
    @* <p>Debug ReceiverId: @Model.FriendUserId</p> *@

    <!-- Hidden fields -->
    <input type="hidden" id="senderId" value="@currentUserId" />
    <input type="hidden" id="receiverId" value="@Model.FriendUserId" />

    <div class="border rounded p-3 mb-3" id="chat-box" style="height: 400px; overflow-y: auto;">
        @foreach (var msg in Model.Messages)
        {
            <div class="mb-2 text-@(msg.IsSentByCurrentUser ? "end" : "start")">
                <span class="badge bg-@(msg.IsSentByCurrentUser ? "primary" : "secondary")">
                    @msg.Content
                </span>
                <small class="d-block text-muted">@msg.SentAt.ToString("hh:mm tt")</small>
            </div>
        }
    </div>

    <div class="d-flex">
        <input type="text" id="messageInput" class="form-control me-2" placeholder="Type your message..." />
        <button class="btn btn-primary" id="sendBtn">Send</button>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chathub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            const senderId = document.getElementById("senderId").value;
            const receiverId = document.getElementById("receiverId").value;

            console.log("📌 SenderId:", senderId);
            console.log("📌 ReceiverId:", receiverId);

            connection.start().then(() => {
                console.log("✅ SignalR connected.");
            }).catch(err => {
                console.error("❌ SignalR connection failed:", err);
            });

            // Incoming message handler
            connection.on("ReceiveMessage", function (fromUserId, message) {
                const isMe = fromUserId === senderId;
                const alignment = isMe ? "end" : "start";
                const badgeClass = isMe ? "primary" : "secondary";

                const chatBox = document.getElementById("chat-box");
                const div = document.createElement("div");
                div.className = `mb-2 text-${alignment}`;
                div.innerHTML = `<span class="badge bg-${badgeClass}">${message}</span>`;
                chatBox.appendChild(div);
                chatBox.scrollTop = chatBox.scrollHeight;
            });

            // Send message
            document.getElementById("sendBtn").addEventListener("click", async function () {
                const input = document.getElementById("messageInput");
                const message = input.value.trim();
                if (!message) return;

                try {
                    await connection.invoke("SendMessage", senderId, receiverId, message);
                    input.value = "";
                } catch (err) {
                    alert("Error sending message.");
                    console.error("SignalR send error:", err);
                }
            });

            // Send on Enter key
            document.getElementById("messageInput").addEventListener("keypress", function (e) {
                if (e.key === "Enter") {
                    document.getElementById("sendBtn").click();
                }
            });
        });
    </script>
}


