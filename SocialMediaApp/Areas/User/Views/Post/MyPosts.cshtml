@using Microsoft.AspNetCore.Identity
@model List<SocialMediaApp.Models.Post>
@inject UserManager<SocialMediaApp.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "My Posts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .post-wrapper {
        max-width: 600px;
        margin: 0 auto;
    }

    .post-card {
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        overflow: hidden;
        margin-bottom: 30px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        position: relative;
    }

    .post-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 16px;
    }

    .post-user-info {
        display: flex;
        align-items: center;
    }

        .post-user-info img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 50%;
            margin-right: 10px;
        }

    .post-actions a {
        margin-left: 8px;
        font-size: 18px;
        color: #555;
        text-decoration: none;
    }

        .post-actions a:hover {
            color: #000;
        }

    .post-text {
        padding: 0 16px 12px;
        font-size: 16px;
        white-space: pre-wrap;
    }

    .post-media {
        width: 100%;
        height: auto;
        display: block;
    }

        .post-media.video {
            max-height: 600px;
        }

    .post-meta {
        font-size: 12px;
        color: #888;
        padding: 0 16px 12px;
    }

    .edit-controls {
        padding: 0 16px 12px;
        display: flex;
        justify-content: end;
        gap: 8px;
    }

    .btn-icon {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 14px;
    }
</style>

<div class="container mt-4">
    <h3 class="text-center">My Posts</h3>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center">@TempData["Success"]</div>
    }

    @foreach (var post in Model)
    {
        var user = await UserManager.FindByIdAsync(post.UserId);

        <div class="post-wrapper" id="post-@post.Id">
            <div class="post-card">

                <!-- Header with Profile -->
                <div class="post-header">
                    <div class="post-user-info">
                        <img src="@(!string.IsNullOrEmpty(user.ProfilePictureUrl) ? user.ProfilePictureUrl : "/images/profile/default.png")" alt="Profile" />
                        <strong>@user.Name</strong>
                    </div>
                    <div class="post-actions">
                        <a href="javascript:void(0);" onclick="editPost(@post.Id)" title="Edit"><i class="bi bi-pencil-square"></i></a>
                        <a href="javascript:void(0);" onclick="deletePost(@post.Id)" title="Delete"><i class="bi bi-trash"></i></a>
                    </div>
                </div>

                <!-- Post Text -->
                @if (!string.IsNullOrEmpty(post.TextContent))
                {
                    <div class="post-text">@post.TextContent</div>
                }

                <!-- Media -->
                @if (!string.IsNullOrEmpty(post.MediaUrl))
                {
                    if (post.MediaType == "image")
                    {
                        <img src="@post.MediaUrl" alt="Post image" class="post-media" />
                    }
                    else if (post.MediaType == "video")
                    {
                        <video class="post-media video" controls>
                            <source src="@post.MediaUrl" type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    }
                    else
                    {
                        <div class="alert alert-warning">Unsupported media type.</div>
                    }
                }

                <!-- Meta + Edit Controls -->
                <div id="edit-controls-@post.Id" class="edit-controls d-none"></div>

                <div class="post-meta">
                    Posted on @post.PostedAt.ToString("dd-MM-yyyy HH:mm")
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function editPost(postId) {
            const postCard = document.getElementById(`post-${postId}`);
            const textDiv = postCard.querySelector(".post-text");
            const originalText = textDiv.innerText.trim();
            const editControls = document.getElementById(`edit-controls-${postId}`);
            textDiv.innerHTML = `<textarea class='form-control mb-2' id='edit-text-${postId}'>${originalText}</textarea>`;
            editControls.classList.remove("d-none");
            editControls.innerHTML = `
                <button class='btn btn-success btn-icon' onclick='savePost(${postId})'><i class="bi bi-check-lg"></i></button>
                <button class='btn btn-secondary btn-icon' onclick='cancelEdit(${postId}, \`${originalText.replace(/`/g, '\\`')}\`)'><i class="bi bi-x-lg"></i></button>
            `;
        }

        function cancelEdit(postId, originalText) {
            const textDiv = document.querySelector(`#post-${postId} .post-text`);
            const editControls = document.getElementById(`edit-controls-${postId}`);
            textDiv.innerText = originalText;
            editControls.classList.add("d-none");
            editControls.innerHTML = "";
        }

        function savePost(postId) {
            const newText = document.getElementById(`edit-text-${postId}`).value;

            $.post('/User/Post/UpdatePost', { id: postId, newText: newText }, function (res) {
                if (res.success) {
                    const textDiv = document.querySelector(`#post-${postId} .post-text`);
                    const editControls = document.getElementById(`edit-controls-${postId}`);
                    textDiv.innerText = res.updatedText;
                    editControls.classList.add("d-none");
                    editControls.innerHTML = "";
                } else {
                    alert("Update failed.");
                }
            }).fail(function () {
                alert("Something went wrong while updating the post.");
            });
        }

        function deletePost(postId) {
            if (!confirm("Are you sure you want to delete this post?")) return;

            $.post('/User/Post/DeletePost', { id: postId }, function (res) {
                if (res.success) {
                    document.getElementById(`post-${postId}`).remove();
                } else {
                    alert("Delete failed.");
                }
            }).fail(function () {
                alert("Something went wrong while deleting the post.");
            });
        }
    </script>
}
