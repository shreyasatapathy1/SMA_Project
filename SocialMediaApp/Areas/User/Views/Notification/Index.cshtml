@model List<SocialMediaApp.Models.Notification>

@{
    ViewData["Title"] = "Notifications";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">🔔 Your Notifications</h2>

@if (Model.Any())
{
    foreach (var notification in Model.OrderByDescending(n => n.CreatedAt))
    {
        string icon = notification.Message.Contains("friend") ? "📬"
                     : notification.Message.Contains("message") ? "💬"
                     : notification.Message.Contains("liked") ? "❤️"
                     : notification.Message.Contains("commented") ? "💭"
                     : "🔔";

        <div class="card mb-3 shadow-sm notification-card @(notification.IsRead ? "" : "border-primary bg-light")" data-id="@notification.Id">
            <div class="card-body d-flex justify-content-between align-items-center">
                <div class="me-3">
                    <h5 class="card-title mb-1">@icon <span>@Html.Raw(notification.Message)</span></h5>
                    <small class="text-muted">@notification.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, hh:mm tt")</small>
                </div>

                @if (!notification.IsRead)
                {
                    <button class="btn btn-sm btn-outline-primary mark-as-read-btn" data-id="@notification.Id"> 
                         Mark as read 
                    </button>
                }
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-info text-center">
        <strong>No notifications yet.</strong>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.mark-as-read-btn').click(function (e) {
                e.preventDefault();
                const notificationId = $(this).data('id');

                $.ajax({
                    url: '/User/Notification/MarkAsRead',
                    method: 'POST',
                    data: { id: notificationId },
                    success: function () {
                        const card = $(`.notification-card[data-id="${notificationId}"]`);
                        card.removeClass('border-primary bg-light');
                        card.find('.mark-as-read-btn').remove(); // remove the button
                    },
                    error: function () {
                        alert('⚠️ Failed to mark as read.');
                    }
                });
            });
        });
    </script>
}
